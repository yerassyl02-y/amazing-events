# Created by .ignore support plugin (hsz.mobi)
### Node template
# Logs
/logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# Nuxt generate
dist

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# IDE / Editor
.idea

# Service worker
sw.*

# macOS
.DS_Store

# Vim swap files
*.swp

   const express = require("express"); // the library we will use to handle requests
      const app = express(); // instantiate express
      app.use(require("cors")()); // allow Cross-domain requests
      app.use(require("body-parser").json()); // automatically parses request data to JSON

      // base route
      app.get("/", function (request, response) {
        response.send("TODO"); // always responds with the string "TODO"
      });

      // base route
      app.post("/", function (request, response) {
        response.send("TODO"); // always responds with the string "TODO"
      });

      app.put("/", function (request, response) {
        response.send("TODO"); // always responds with the string "TODO"
      });

      // listen for requests, the process.env.PORT is needed because
      // we are using glitch, otherwise you could have written 80 or whatever
      var listener = app.listen(process.env.PORT, function () {
        console.log("Your app is listening on port " + listener.address().port);
      });